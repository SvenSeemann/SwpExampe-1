// Generated by CoffeeScript 1.8.0
(function() {
  var ATR;

  ATR = (function() {
    var baseurl;

    ATR.prototype.templates = {
      make_artist_field: function(name, id, genre, price, technician) {
        var field;
        field = this.artist_field.clone();
        field.find('.artist-name').text(name);
        field.find('.artist-genre').text(genre.name);
        field.find('.artist-genre').data('id', genre.id);
        field.find('.artist-genre').on('click', function() {
          return window.atr.fill_genre_table(genre.id);
        });
        field.find('.artist-technician').text(technician);
        field.find('.artist-price').text(price);
        return field;
      },
      make_table_row: function(name, id, genre, price, technician) {
        var row;
        row = this.table_row.clone();
        row.data('id', id);
        row.children('.artist-name').text(name);
        row.children('.artist-name').on('click', function() {
          return window.atr.display_single_artist(id);
        });
        row.children('.artist-genre').text(genre.name);
        row.children('.artist-genre').data('id', genre.id);
        row.children('.artist-genre').on('click', function() {
          return window.atr.fill_genre_table(genre.id);
        });
        row.children('.artist-technician').text(technician);
        row.children('.artist-price').text(price);
        return row;
      },
      make_genre_table_row: function(name, id, price, technician) {
        var row;
        row = this.table_row.clone();
        row.data('id', id);
        row.children('.artist-name').text(name);
        row.children('.artist-genre').remove();
        row.children('.artist-name').on('click', function() {
          return window.atr.display_single_artist(id);
        });
        row.children('.artist-technician').text(technician);
        row.children('.artist-price').text(price);
        return row;
      }
    };

    function ATR() {
      var artist_field, table_row;
      table_row = $('#artists-table').find('.single-artist');
      this.templates.table_row = table_row.clone();
      table_row.remove();
      artist_field = $('#artist-showcase').find('.single-artist');
      this.templates.artist_field = artist_field.clone();
      artist_field.remove();
    }

    baseurl = 'http://178.238.237.25:8081/ArtistServiceRails/';

    ATR.prototype.urls = {
      base_url: baseurl,
      genre: baseurl + 'genre',
      by_genre_id: function(id) {
        return this.genre + '/' + id;
      },
      all: baseurl + 'artist',
      artist_by_id: function(id) {
        return this.all + '/' + id;
      }
    };

    ATR.prototype.request = function(url, callback) {
      return $.ajax({
        type: 'GET',
        url: url,
        success: function(data) {
          return callback(data);
        },
        crossDomain: true,
        error: function(a, b, c) {
          return console.log(a, b, c);
        }
      });
    };

    ATR.prototype.init_all_artists = function() {
      return this.request(this.urls.all, (function(_this) {
        return function(data) {
          var artist, table, _i, _len;
          table = $('#artists-table').children('tbody');
          table.empty();
          for (_i = 0, _len = data.length; _i < _len; _i++) {
            artist = data[_i];
            table.append(_this.templates.make_table_row(artist.name, artist.id, artist.genre, artist.price, artist.technician));
          }
        };
      })(this));
    };

    ATR.prototype.fill_genre_table = function(id) {
      return this.request(this.urls.by_genre_id(id), (function(_this) {
        return function(data) {
          var artist, table, _i, _len, _ref;
          table = $('#artists-genre-table').children('tbody');
          table.empty();
          _ref = data.artists;
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            artist = _ref[_i];
            table.append(_this.templates.make_genre_table_row(artist.name, artist.id, artist.price, artist.technician));
          }
        };
      })(this));
    };

    ATR.prototype.display_single_artist = function(id) {
      return this.request(this.urls.artist_by_id(id), (function(_this) {
        return function(data) {
          var field;
          field = $('#artist-showcase');
          field.empty();
          field.append(_this.templates.make_artist_field(data.name, data.id, data.genre, data.price, data.technician));
        };
      })(this));
    };

    return ATR;

  })();

  $(document).ready(function() {
    if (window.atr == null) {
      window.atr = new ATR();
    }
    window.atr.init_all_artists();
  });

}).call(this);
